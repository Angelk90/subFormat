{"version":3,"sources":["function.js","page/Copy.js","page/Error.js","App.js","serviceWorker.js","index.js"],"names":["className","args","join","InspectModule","Copy","darkState","classes","makeStyles","theme","title","color","textShadow","button","margin","spacing","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","useStyles","React","useState","original","setOriginal","value","setValue","progress","setProgress","name","setName","num","setNum","id","TextField","label","variant","size","onChange","target","Button","onClick","_num","String","parseInt","padStart","e","a","navigator","clipboard","readText","undefined","length","c","split","map","el","includes","replace","writeText","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","style","display","justifyContent","alignItems","CircularProgress","options","originalFileName","updatedFileName","outputFormat","past","current","key","row","shift","time","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","Typography","AccordionDetails","Error","paragraph","App","props","wind","container","prefersDark","window","matchMedia","matches","localDark","localStorage","getItem","isDark","pathname","useLocation","mobileOpen","state","setState","root","drawer","breakpoints","up","width","appBar","marginLeft","menuButton","marginRight","grey","blue","toolbar","mixins","drawerPaper","backgroundColor","content","flexGrow","padding","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","createMuiTheme","primary","main","useTheme","handleDrawerToggle","prev","handleThemeChange","useCallback","setItem","menu","path","icon","GTranslate","routeObj","obj","List","index","badge","to","ListItem","page","ListItemIcon","ListItemText","Chip","ThemeProvider","CssBaseline","AppBar","position","boxShadow","Toolbar","IconButton","aria-label","edge","Menu","checked","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","mdDown","exact","component","Boolean","location","hostname","match","ReactDOM","render","basename","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a58ce5f7.chunk.js","sourcesContent":["const className = (...args) => args.join(' ');\nexport { className };\n","import React from \"react\";\nimport {\n  makeStyles,\n  TextField,\n  CircularProgress,\n  Button,\n  Chip,\n  AccordionSummary,\n  Accordion,\n  Typography,\n  AccordionDetails\n} from \"@material-ui/core\";\nimport {useDropzone} from \"react-dropzone\";\n\nimport PizZip from \"pizzip\";\nimport Docxtemplater from \"docxtemplater\";\nimport InspectModule from \"docxtemplater/js/inspect-module\";\n\nimport {className} from \"../function\";\nimport {AttachFile, ExpandMore} from \"@material-ui/icons\";\n\nimport \"../styles/main.css\";\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\nimport \"../styles/styles.css\";\nimport {ReactGhLikeDiff} from \"react-gh-like-diff\";\n\nconst iModule = InspectModule();\n\nfunction Dropzone({\n                    multiple = false, onOperation, onDelete = () => {\n  }\n                  }) {\n  const [myFile, setMyFile] = React.useState([]);\n\n  const onDrop = React.useCallback(\n      (acceptedFiles) => {\n        setMyFile([...acceptedFiles]);\n        onOperation(acceptedFiles);\n      },\n      [myFile, onOperation]\n  );\n\n  const {getRootProps, getInputProps} = useDropzone({\n    accept:\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    onDrop\n  });\n\n  const removeAll = () => setMyFile([]);\n  const file = myFile.map((file, key) => (\n      <Chip\n          key={key}\n          icon={<AttachFile/>}\n          label={`${file.path} - ${file.size} bytes`}\n          color=\"primary\"\n          onDelete={() => {\n            removeAll();\n            onDelete();\n          }}\n          style={{cursor: \"pointer\"}}\n      />\n  ));\n\n  return (\n      <>\n      <span {...getRootProps({className: \"drop-zon\"})}>\n        {<input {...getInputProps()} multiple={multiple}/>}\n        {file.length > 0 ? (\n            file\n        ) : (\n            <Chip\n                icon={<AttachFile/>}\n                label={\"File\"}\n                color=\"primary\"\n                style={{\n                  cursor: \"pointer\"\n                }}\n            />\n        )}\n      </span>\n      </>\n  );\n}\n\nexport default function Copy({darkState}) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"\n      }`\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  }));\n  const classes = useStyles();\n\n  const [original, setOriginal] = React.useState(\"\");\n  const [value, setValue] = React.useState(\"\");\n  const [progress, setProgress] = React.useState(false);\n  const [name, setName] = React.useState(\"myFile\");\n  const [num, setNum] = React.useState(\"01\");\n\n  const showFile = async (files) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      setProgress(true);\n      const text = e.target.result;\n      var doc = new Docxtemplater(new PizZip(text), {\n        modules: [iModule],\n        linebreaks: true\n      });\n      const t = doc.getFullText();\n      if (t.length > 0) {\n        let c = t.split(\"\\n\").map((el) => {\n          if (el.includes(\"->\"))\n            el = el.replace(/\\b(\\d\\d:\\d\\d:\\d\\d)\\.(\\d\\d\\d)\\b/g, \"$1,$2\");\n          return el;\n        });\n        setValue(c.join(\"\\n\"));\n        setProgress(false);\n      }\n    };\n    reader.readAsBinaryString(files[0]);\n  };\n\n  return (\n      <>\n        <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>\n          Copy\n          <span className=\"text-primary\">Srt</span>\n        </h1>\n\n        <div id={\"space\"}>\n          {false && (\n              <Dropzone\n                  onOperation={showFile}\n                  onDelete={() => {\n                    setValue(\"\");\n                  }}\n              />\n          )}\n          <TextField\n              id=\"name\"\n              label=\"Name file\"\n              variant=\"outlined\"\n              value={name}\n              size={\"small\"}\n              onChange={({target: {value}}) => setName(value)}\n          />\n          <TextField\n              id=\"num\"\n              label=\"Num file\"\n              variant=\"outlined\"\n              value={num}\n              size={\"small\"}\n              onChange={({target: {value}}) => setNum(value)}\n          />\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                let _num = String(parseInt(num) + 1).padStart(2, \"0\");\n                setNum(_num);\n              }}\n          >\n            Inc\n          </Button>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={async (e) => {\n                setProgress(true);\n                const text = await navigator.clipboard?.readText();\n                if (text !== undefined && text.length > 0) {\n                  setOriginal(text)\n                  let c = text.split(\"\\n\").map((el) => {\n                    if (el.includes(\"->\"))\n                      el = el.replace(/\\b(\\d\\d:\\d\\d:\\d\\d)\\.(\\d\\d\\d)\\b/g, \"$1,$2\");\n                    return el;\n                  });\n                  setValue(c.join(\"\\n\"));\n                  setProgress(false);\n                  navigator.clipboard.writeText(\"\");\n                } else {\n                  setProgress(false);\n                }\n              }}\n          >\n            Paste\n          </Button>\n\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([value], {type: \"text/plain\"});\n                element.href = URL.createObjectURL(file);\n                element.download = name + num + \".srt\";\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n              }}\n          >\n            Download\n          </Button>\n        </div>\n        <br/>\n\n        {progress && (\n            <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n            >\n              <CircularProgress/>\n            </div>\n        )}\n\n          {value.length > 0 &&\n              <ReactGhLikeDiff\n                  options={{\n                      originalFileName: name + num,\n                      updatedFileName: name + num,\n                      outputFormat: 'side-by-side'\n                  }}\n                  past={original}\n                  current={value}\n              />\n          }\n\n        {value.length > 0 &&\n            value.split(\"\\n\\n\").map((el, key) => {\n              let row = el.split(\"\\n\");\n              const num = row.shift();\n              const time = row.shift();\n              return (\n                  <Accordion key={key}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMore/>}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                      <Typography className={classes.heading}>\n                        <span style={{color: \"#155e14\"}}>{num}</span>{\" \"}\n                        <span style={{color: \"#e26823\"}}>({time})</span>\n                      </Typography>\n                      <Typography className={classes.secondaryHeading}>\n                        {row.join(\"\\n\")}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography style={{color: \"#1292d5\"}}>\n                        {row.join(\"\\n\")}\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n              );\n            })}\n      </>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { className } from \"../function\";\nimport \"../styles/main.css\";\n\nexport default function Error({ darkState }) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"}`\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"text-center\">\n      <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>404</h1>\n      <Typography paragraph variant=\"h5\" color=\"textSecondary\">\n      We are sorry but we could not find the page you are looking.\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport {\n  AppBar,\n  CssBaseline,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Chip\n} from \"@material-ui/core\";\nimport {\n  GTranslate,\n  Menu,\n} from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  useTheme,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport { blue, grey } from \"@material-ui/core/colors\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { Copy, Error } from \"./page\";\nimport \"./styles/main.css\";\nimport \"./App.css\";\n\nconst drawerWidth = 240;\n\nfunction App(props) {\n  const { wind } = props;\n  const container = wind !== undefined ? () => wind().document.body : undefined;\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const localDark = localStorage.getItem(\"dark\");\n  const isDark = localDark === null ? prefersDark : localDark === \"true\";\n\n  let location = useLocation();\n  let pathname = location.pathname.replace(\"/\", \"\");\n  if (pathname === \"\") pathname = \"docx\";\n\n  const [state, setState] = React.useState({\n    mobileOpen: false,\n    darkState: isDark\n  });\n  const { mobileOpen, darkState } = state;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\"\n    },\n    drawer: {\n      [theme.breakpoints.up(\"lg\")]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    appBar: {\n      [theme.breakpoints.up(\"lg\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"lg\")]: {\n        display: \"none\"\n      },\n      backgroundColor: darkState ? grey[900] : blue[500]\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      color: \"#ffffff\",\n      backgroundColor: darkState ? grey[900] : blue[500]\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  }));\n\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? grey[900] : blue[500];\n  const mainSecondaryColor = darkState ? grey[800] : blue[300];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const handleDrawerToggle = () =>\n      setState((prev) => ({ ...prev, mobileOpen: !mobileOpen }));\n  const changePage = (page) => setState((prev) => ({ ...prev, page }));\n  const handleThemeChange = React.useCallback(() => {\n    localStorage.setItem(\"dark\", !darkState);\n    setState((prev) => ({ ...prev, darkState: !prev.darkState }));\n  }, []);\n\n  const menu = [\n    { title: \"Copy Srt\", path: \"docx\", icon: <GTranslate />}\n  ];\n\n  const routeObj = [\n    { path: \"/\", obj: <Copy darkState={darkState} /> },\n    { path: \"copy\", obj: <Copy darkState={darkState} /> },\n  ];\n\n  const drawer = (\n      <div className=\"mt-32\">\n        <div className={classes.toolbar} />\n        <List>\n          {menu.map(({ title, path, icon, badge }, index) => (\n              <Link to={`/${path}`} key={title}>\n                <ListItem button key={title} onClick={() => changePage(path)}>\n                  <ListItemIcon\n                      style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                  >\n                    {icon}\n                  </ListItemIcon>\n                  <ListItemText\n                      primary={<span className=\"font-bold\">{title}</span>}\n                      style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                  />\n                  {badge && (\n                      <Chip\n                          label={badge}\n                          size=\"small\"\n                          color=\"secondary\"\n                          className=\"font-bold\"\n                          style={{ color: \"#ffffff\" }}\n                      />\n                  )}\n                </ListItem>\n              </Link>\n          ))}\n        </List>\n      </div>\n  );\n\n  return (\n      <ThemeProvider theme={darkTheme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n              position=\"fixed\"\n              className={classes.appBar}\n              style={{\n                backgroundColor: darkState ? \"#303030\" : grey[50],\n                boxShadow: \"none\"\n              }}\n          >\n            <Toolbar className={\"shadow-none\"}>\n              <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"ml-auto text-right flex\">\n                <DarkModeToggle\n                    onChange={handleThemeChange}\n                    checked={darkState}\n                    size={60}\n                />\n              </div>\n            </Toolbar>\n          </AppBar>\n\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden mdUp implementation=\"css\">\n              <Drawer\n                  container={container}\n                  variant=\"temporary\"\n                  anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                  open={mobileOpen}\n                  onClose={handleDrawerToggle}\n                  classes={{\n                    paper: classes.drawerPaper\n                  }}\n                  ModalProps={{\n                    keepMounted: true // Better open performance on mobile.\n                  }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n              <Drawer\n                  classes={{\n                    paper: classes.drawerPaper\n                  }}\n                  variant=\"permanent\"\n                  open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Switch>\n              {routeObj.map(({ path, obj }, key) => (\n                  <Route exact path={`/${path}`} component={() => obj} key={key} />\n              ))}\n              <Route path={`/lib`} component={() => <div>ciao</div>} />\n              <Route component={() => <Error darkState={darkState} />} />\n            </Switch>\n          </main>\n        </div>\n      </ThemeProvider>\n  );\n}\n\nApp.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  wind: PropTypes.func\n};\n\nexport default App;\n/*\n\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  HashRouter,\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}