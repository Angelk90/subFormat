{"version":3,"sources":["function.js","page/Copy.js","page/Error.js","App.js","serviceWorker.js","index.js"],"names":["className","args","join","DOMParser","require","Dropzone","multiple","onOperation","onDelete","React","useState","myFile","setMyFile","onDrop","useCallback","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","file","map","key","Chip","icon","AttachFile","label","path","size","color","style","cursor","length","Copy","darkState","classes","makeStyles","theme","title","textShadow","button","margin","spacing","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","useStyles","original","setOriginal","value","setValue","progress","setProgress","name","setName","num","setNum","showFile","files","a","reader","FileReader","onload","e","target","result","zip","PizZip","xml","str2xml","asText","paragraphsXml","getElementsByTagName","paragraphs","i","len","fullText","textsXml","j","len2","textXml","childNodes","nodeValue","push","c","el","includes","replace","console","log","readAsBinaryString","str","charCodeAt","substr","parseFromString","id","TextField","variant","onChange","Button","onClick","_num","String","parseInt","padStart","navigator","clipboard","readText","undefined","split","writeText","element","document","createElement","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","display","justifyContent","alignItems","CircularProgress","options","originalFileName","updatedFileName","outputFormat","past","current","row","shift","time","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","Typography","AccordionDetails","Error","paragraph","App","props","wind","container","prefersDark","window","matchMedia","matches","localDark","localStorage","getItem","isDark","pathname","useLocation","mobileOpen","state","setState","root","drawer","breakpoints","up","width","appBar","marginLeft","menuButton","marginRight","grey","blue","toolbar","mixins","drawerPaper","backgroundColor","content","flexGrow","padding","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","createMuiTheme","primary","main","useTheme","handleDrawerToggle","prev","handleThemeChange","setItem","menu","GTranslate","routeObj","obj","List","index","badge","to","ListItem","page","ListItemIcon","ListItemText","ThemeProvider","CssBaseline","AppBar","position","boxShadow","Toolbar","IconButton","aria-label","edge","Menu","checked","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","mdDown","exact","Boolean","location","hostname","match","ReactDOM","render","basename","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b59ec4ae.chunk.js","sourcesContent":["const className = (...args) => args.join(' ');\nexport { className };\n","import React from \"react\";\nimport {\n  makeStyles,\n  TextField,\n  CircularProgress,\n  Button,\n  Chip,\n  AccordionSummary,\n  Accordion,\n  Typography,\n  AccordionDetails\n} from \"@material-ui/core\";\nimport {useDropzone} from \"react-dropzone\";\n\nimport PizZip from \"pizzip\";\n\nimport {className} from \"../function\";\nimport {AttachFile, ExpandMore} from \"@material-ui/icons\";\n\nimport \"../styles/main.css\";\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\nimport \"../styles/styles.css\";\nimport {ReactGhLikeDiff} from \"react-gh-like-diff\";\n\nconst { DOMParser } = require(\"@xmldom/xmldom\");\n\nfunction Dropzone({\n                    multiple = false, onOperation, onDelete = () => {\n  }\n                  }) {\n  const [myFile, setMyFile] = React.useState([]);\n\n  const onDrop = React.useCallback(\n      (acceptedFiles) => {\n        setMyFile([...acceptedFiles]);\n        onOperation(acceptedFiles);\n      },\n      [myFile, onOperation]\n  );\n\n  const {getRootProps, getInputProps} = useDropzone({\n    accept:\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    onDrop\n  });\n\n  const removeAll = () => setMyFile([]);\n  const file = myFile.map((file, key) => (\n      <Chip\n          key={key}\n          icon={<AttachFile/>}\n          label={`${file.path} - ${file.size} bytes`}\n          color=\"primary\"\n          onDelete={() => {\n            removeAll();\n            onDelete();\n          }}\n          style={{cursor: \"pointer\"}}\n      />\n  ));\n\n  return (\n      <>\n      <span {...getRootProps({className: \"drop-zon\"})}>\n        {<input {...getInputProps()} multiple={multiple}/>}\n        {file.length > 0 ? (\n            file\n        ) : (\n            <Chip\n                icon={<AttachFile/>}\n                label={\"File\"}\n                color=\"primary\"\n                style={{\n                  cursor: \"pointer\"\n                }}\n            />\n        )}\n      </span>\n      </>\n  );\n}\n\nexport default function Copy({darkState}) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"\n      }`\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  }));\n  const classes = useStyles();\n\n  const [original, setOriginal] = React.useState(\"\");\n  const [value, setValue] = React.useState(\"\");\n  const [progress, setProgress] = React.useState(false);\n  const [name, setName] = React.useState(\"myFile\");\n  const [num, setNum] = React.useState(\"01\");\n\n    const showFile = async (files) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            setProgress(true);\n            const text = e.target.result;\n            const zip = new PizZip(text);\n            const xml = str2xml(zip.files[\"word/document.xml\"].asText());\n            const paragraphsXml = xml.getElementsByTagName(\"w:p\");\n            const paragraphs = [];\n            for (let i = 0, len = paragraphsXml.length; i < len; i++) {\n                let fullText = \"\";\n                const textsXml = paragraphsXml[i].getElementsByTagName(\"w:t\");\n                for (let j = 0, len2 = textsXml.length; j < len2; j++) {\n                    const textXml = textsXml[j];\n                    if (textXml.childNodes) {\n                        fullText += (textXml.childNodes[0]?.nodeValue) || \"\";\n                    }\n                }\n\n                paragraphs.push(fullText);\n            }\n\n            setOriginal(paragraphs.join(\"\\n\"));\n\n            if (paragraphs.length > 0) {\n                let c = paragraphs.map((el) => {\n                    if (el.includes(\"->\"))\n                        el = el.replace(/\\b(\\d\\d:\\d\\d:\\d\\d)\\.(\\d\\d\\d)\\b/g, \"$1,$2\");\n                    return el;\n                });\n                setValue(c.join(\"\\n\"));\n                setProgress(false);\n            }\n\n            console.log(paragraphs);\n        };\n        reader.readAsBinaryString(files[0]);\n    };\n\n    function str2xml(str) {\n        if (str.charCodeAt(0) === 65279) str = str.substr(1);\n        return new DOMParser().parseFromString(str, \"text/xml\");\n    }\n\n    return (\n        <>\n            <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>\n                Copy\n                <span className=\"text-primary\">Srt</span>\n            </h1>\n\n            <div id={\"space\"}>\n\n                    <Dropzone\n                        onOperation={showFile}\n                        onDelete={() => {\n                            setValue(\"\");\n                        }}\n                    />\n\n                <TextField\n                    id=\"name\"\n                    label=\"Name file\"\n                    variant=\"outlined\"\n                    value={name}\n                    size={\"small\"}\n                    onChange={({target: {value}}) => setName(value)}\n                />\n                <TextField\n                    id=\"num\"\n                    label=\"Num file\"\n                    variant=\"outlined\"\n                    value={num}\n                    size={\"small\"}\n                    onChange={({target: {value}}) => setNum(value)}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        let _num = String(parseInt(num) + 1).padStart(2, \"0\");\n                        setNum(_num);\n                    }}\n                >\n                    Inc\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async (e) => {\n                        setProgress(true);\n                        const text = await navigator.clipboard?.readText();\n                        if (text !== undefined && text.length > 0) {\n                            setOriginal(text)\n                            let c = text.split(\"\\n\").map((el) => {\n                                if (el.includes(\"->\"))\n                                    el = el.replace(/\\b(\\d\\d:\\d\\d:\\d\\d)\\.(\\d\\d\\d)\\b/g, \"$1,$2\");\n                                return el;\n                            });\n                            setValue(c.join(\"\\n\"));\n                            setProgress(false);\n                            navigator.clipboard.writeText(\"\");\n                        } else {\n                            setProgress(false);\n                        }\n                    }}\n                >\n                    Paste\n                </Button>\n\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([value], {type: \"text/plain\"});\n                element.href = URL.createObjectURL(file);\n                element.download = name + num + \".srt\";\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n              }}\n          >\n            Download\n          </Button>\n        </div>\n        <br/>\n\n        {progress && (\n            <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n            >\n              <CircularProgress/>\n            </div>\n        )}\n\n          {value.length > 0 &&\n              <ReactGhLikeDiff\n                  options={{\n                      originalFileName: name + num,\n                      updatedFileName: name + num,\n                      outputFormat: 'side-by-side'\n                  }}\n                  past={original}\n                  current={value}\n              />\n          }\n\n        {value.length > 0 &&\n            value.split(\"\\n\\n\").map((el, key) => {\n              let row = el.split(\"\\n\");\n              const num = row.shift();\n              const time = row.shift();\n              return (\n                  <Accordion key={key}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMore/>}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                      <Typography className={classes.heading}>\n                        <span style={{color: \"#155e14\"}}>{num}</span>{\" \"}\n                        <span style={{color: \"#e26823\"}}>({time})</span>\n                      </Typography>\n                      <Typography className={classes.secondaryHeading}>\n                        {row.join(\"\\n\")}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography style={{color: \"#1292d5\"}}>\n                        {row.join(\"\\n\")}\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n              );\n            })}\n      </>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { className } from \"../function\";\nimport \"../styles/main.css\";\n\nexport default function Error({ darkState }) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      color: darkState ? \"#ffffff\" : \"#343a40\",\n      textShadow: `3px 3px 2px ${darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"}`\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"text-center\">\n      <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>404</h1>\n      <Typography paragraph variant=\"h5\" color=\"textSecondary\">\n      We are sorry but we could not find the page you are looking.\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Link, useLocation, Routes } from \"react-router-dom\";\nimport {\n  AppBar,\n  CssBaseline,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Chip\n} from \"@material-ui/core\";\nimport {\n  GTranslate,\n  Menu,\n} from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  useTheme,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport { blue, grey } from \"@material-ui/core/colors\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { Copy, Error } from \"./page\";\nimport \"./styles/main.css\";\nimport \"./App.css\";\n\nconst drawerWidth = 240;\n\nfunction App(props) {\n  const { wind } = props;\n  const container = wind !== undefined ? () => wind().document.body : undefined;\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const localDark = localStorage.getItem(\"dark\");\n  const isDark = localDark === null ? prefersDark : localDark === \"true\";\n\n  let location = useLocation();\n  let pathname = location.pathname.replace(\"/\", \"\");\n  if (pathname === \"\") pathname = \"docx\";\n\n  const [state, setState] = React.useState({\n    mobileOpen: false,\n    darkState: isDark\n  });\n  const { mobileOpen, darkState } = state;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\"\n    },\n    drawer: {\n      [theme.breakpoints.up(\"lg\")]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    appBar: {\n      [theme.breakpoints.up(\"lg\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"lg\")]: {\n        display: \"none\"\n      },\n      backgroundColor: darkState ? grey[900] : blue[500]\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      color: \"#ffffff\",\n      backgroundColor: darkState ? grey[900] : blue[500]\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  }));\n\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? grey[900] : blue[500];\n  const mainSecondaryColor = darkState ? grey[800] : blue[300];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const handleDrawerToggle = () =>\n      setState((prev) => ({ ...prev, mobileOpen: !mobileOpen }));\n  const changePage = (page) => setState((prev) => ({ ...prev, page }));\n  const handleThemeChange = React.useCallback(() => {\n    localStorage.setItem(\"dark\", !darkState);\n    setState((prev) => ({ ...prev, darkState: !prev.darkState }));\n  }, []);\n\n  const menu = [\n    { title: \"Copy Srt\", path: \"docx\", icon: <GTranslate />}\n  ];\n\n  const routeObj = [\n    { path: \"/\", obj: <Copy darkState={darkState} /> },\n    { path: \"copy\", obj: <Copy darkState={darkState} /> },\n  ];\n\n  const drawer = (\n      <div className=\"mt-32\">\n        <div className={classes.toolbar} />\n        <List>\n          {menu.map(({ title, path, icon, badge }, index) => (\n              <Link to={`/${path}`} key={title}>\n                <ListItem button key={title} onClick={() => changePage(path)}>\n                  <ListItemIcon\n                      style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                  >\n                    {icon}\n                  </ListItemIcon>\n                  <ListItemText\n                      primary={<span className=\"font-bold\">{title}</span>}\n                      style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                  />\n                  {badge && (\n                      <Chip\n                          label={badge}\n                          size=\"small\"\n                          color=\"secondary\"\n                          className=\"font-bold\"\n                          style={{ color: \"#ffffff\" }}\n                      />\n                  )}\n                </ListItem>\n              </Link>\n          ))}\n        </List>\n      </div>\n  );\n\n  return (\n      <ThemeProvider theme={darkTheme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n              position=\"fixed\"\n              className={classes.appBar}\n              style={{\n                backgroundColor: darkState ? \"#303030\" : grey[50],\n                boxShadow: \"none\"\n              }}\n          >\n            <Toolbar className={\"shadow-none\"}>\n              <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n              >\n                <Menu />\n              </IconButton>\n              <div className=\"ml-auto text-right flex\">\n                <DarkModeToggle\n                    onChange={handleThemeChange}\n                    checked={darkState}\n                    size={60}\n                />\n              </div>\n            </Toolbar>\n          </AppBar>\n\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden mdUp implementation=\"css\">\n              <Drawer\n                  container={container}\n                  variant=\"temporary\"\n                  anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                  open={mobileOpen}\n                  onClose={handleDrawerToggle}\n                  classes={{\n                    paper: classes.drawerPaper\n                  }}\n                  ModalProps={{\n                    keepMounted: true // Better open performance on mobile.\n                  }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n              <Drawer\n                  classes={{\n                    paper: classes.drawerPaper\n                  }}\n                  variant=\"permanent\"\n                  open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Routes>\n              {routeObj.map(({ path, obj }, key) => (\n                  <Route exact path={`/${path}`} element={obj} key={key} />\n              ))}\n              <Route path={`/lib`} element={() => <div>Hi!</div>} />\n              <Route element={() => <Error darkState={darkState} />} />\n            </Routes>\n          </main>\n        </div>\n      </ThemeProvider>\n  );\n}\n\nApp.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  wind: PropTypes.func\n};\n\nexport default App;\n/*\n\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}